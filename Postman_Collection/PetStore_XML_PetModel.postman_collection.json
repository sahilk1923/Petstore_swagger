{
	"info": {
		"_postman_id": "e1336feb-7534-45bd-b419-51833dcabdf6",
		"name": "PetStore_XML_PetModel",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34384774"
	},
	"item": [
		{
			"name": "Add new pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed the syntax error and added missing semicolon\r",
							"pm.test( \"Check status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const xml2js = require('xml2js');\r",
							"let jsonData;\r",
							"xml2js.parseString(pm.response.text(),{explicitArray: false}, (err, result)=>{\r",
							"    jsonData = result;\r",
							"});\r",
							"console.log(jsonData);\r",
							"\r",
							"\r",
							"pm.test( \"Check Pet Name\", function ( ) {   \r",
							"     \r",
							"    pm.expect(jsonData.Pet.name).to.eq(\"Jimmy\");\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"petid\", jsonData.Pet.id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenName",
							"value": "petswagger",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "test",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "implicit",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "https://petstore.swagger.io/oauth/authorize",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/xml"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Pet>\r\n\t<id>0</id>\r\n\t<Category>\r\n\t\t<id>0</id>\r\n\t\t<name>Dog</name>\r\n\t</Category>\r\n\t<name>Jimmy</name>\r\n\t<photoUrls>\r\n\t\t<photoUrl>string</photoUrl>\r\n\t</photoUrls>\r\n\t<tags>\r\n\t\t<Tag>\r\n\t\t\t<id>0</id>\r\n\t\t\t<name>string</name>\r\n\t\t</Tag>\r\n\t</tags>\r\n\t<status>available</status>\r\n</Pet>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\r\n  'https://petstore.swagger.io/v2/pet' \\\r\n  -H 'accept: application/xml' \\\r\n  -H 'Content-Type: application/xml' \\\r\n  -d '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Pet>\r\n\t<id>0</id>\r\n\t<Category>\r\n\t\t<id>0</id>\r\n\t\t<name>string</name>\r\n\t</Category>\r\n\t<name>doggie</name>\r\n\t<photoUrls>\r\n\t\t<photoUrl>string</photoUrl>\r\n\t</photoUrls>\r\n\t<tags>\r\n\t\t<Tag>\r\n\t\t\t<id>0</id>\r\n\t\t\t<name>string</name>\r\n\t\t</Tag>\r\n\t</tags>\r\n\t<status>available</status>\r\n</Pet>'"
			},
			"response": []
		},
		{
			"name": "Find pet by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed the syntax error and added missing semicolon\r",
							"pm.test( \"Check status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const xml2js = require('xml2js');\r",
							"let jsonData;\r",
							"xml2js.parseString(pm.response.text(),{explicitArray: false}, (err, result)=>{\r",
							"    jsonData = result;\r",
							"});\r",
							"console.log(jsonData);\r",
							"\r",
							"\r",
							"pm.test( \"Check Pet ID\", function ( ) {   \r",
							"     \r",
							"    pm.expect(jsonData.Pet.id).to.eq(pm.collectionVariables.get(\"petid\"));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenName",
							"value": "petswagger",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "test",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "implicit",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "https://petstore.swagger.io/oauth/authorize",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/xml"
					}
				],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{petid}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{petid}}"
					]
				},
				"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://petstore.swagger.io/v2/pet/23' \\\r\n  -H 'accept: application/xml'"
			},
			"response": []
		},
		{
			"name": "Update Existing pet details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed the syntax error and added missing semicolon\r",
							"pm.test( \"Check status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const xml2js = require('xml2js');\r",
							"let jsonData;\r",
							"xml2js.parseString(pm.response.text(),{explicitArray: false}, (err, result)=>{\r",
							"    jsonData = result;\r",
							"});\r",
							"console.log(jsonData);\r",
							"\r",
							"\r",
							"pm.test( \"Check Pet Name\", function ( ) {   \r",
							"     \r",
							"    pm.expect(jsonData.Pet.name).to.eq(\"Tommy\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenName",
							"value": "petswagger",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "test",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "implicit",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "https://petstore.swagger.io/oauth/authorize",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/xml"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Pet>\r\n\t<id>{{petid}}</id>\r\n\t<Category>\r\n\t\t<id>0</id>\r\n\t\t<name>string</name>\r\n\t</Category>\r\n\t<name>Tommy</name>\r\n\t<photoUrls>\r\n\t\t<photoUrl>string</photoUrl>\r\n\t</photoUrls>\r\n\t<tags>\r\n\t\t<Tag>\r\n\t\t\t<id>0</id>\r\n\t\t\t<name>string</name>\r\n\t\t</Tag>\r\n\t</tags>\r\n\t<status>available</status>\r\n</Pet>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				},
				"description": "Generated from cURL: curl -X 'PUT' \\\r\n  'https://petstore.swagger.io/v2/pet' \\\r\n  -H 'accept: application/xml' \\\r\n  -H 'Content-Type: application/xml' \\\r\n  -d '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Pet>\r\n\t<id>0</id>\r\n\t<Category>\r\n\t\t<id>0</id>\r\n\t\t<name>string</name>\r\n\t</Category>\r\n\t<name>doggie</name>\r\n\t<photoUrls>\r\n\t\t<photoUrl>string</photoUrl>\r\n\t</photoUrls>\r\n\t<tags>\r\n\t\t<Tag>\r\n\t\t\t<id>0</id>\r\n\t\t\t<name>string</name>\r\n\t\t</Tag>\r\n\t</tags>\r\n\t<status>available</status>\r\n</Pet>'"
			},
			"response": []
		},
		{
			"name": "Delete Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test( \"Check status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.collectionVariables.unset(\"petid\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenName",
							"value": "petswagger",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "test",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "implicit",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "https://petstore.swagger.io/oauth/authorize",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/9223372016900028899",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"9223372016900028899"
					]
				},
				"description": "Generated from cURL: curl -X 'DELETE' \\\r\n  'https://petstore.swagger.io/v2/pet/1' \\\r\n  -H 'accept: application/json'"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "petid",
			"value": ""
		}
	]
}